http {
    upstream api {
        server myapp:5000;
    }
    

    # allow one login attempt per every 1 seconds after multiple failed ones
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # allow only 10 requests per second on other pages
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;

    limit_conn_zone $binary_remote_addr zone=general_con:10m;
    limit_conn_zone $binary_remote_addr zone=login_con:10m;

    map $http_user_agent $modern_browser {
        # Add more browsers as needed
        "~*Firefox" 1;
        "~*Safari" 1;
        "~*Chrome" 1;

        default 0;
    }


    server {
        listen 80;
               
        # security headers
	    add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;       
        # dont load any addionaly libraries in website: all content to come from the site's own origin
        add_header Content-Security-Policy "default-src 'self'";
        
        # enable XSS protection
        add_header X-XSS-Protection "1; mode=block";
        
        # uwsgi headers
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_set_header X-Forwarded-Host $host;
    	proxy_set_header X-Forwarded-Prefix /;
        
        # security settings
        # limit connections per ip to 10 in general and 1 on login page
        limit_conn general_con 20;
        # close connection after 5 seconds if client is not responding
        client_body_timeout 5s;
        client_header_timeout 5s;

        limit_req_status 429;


        # rate limit login page
        location /login {
            if ($modern_browser = 0) {
                return 403;
            }

            # three attempts first than => throttle to 1 r/s => than block after 4
            limit_req zone=login burst=4 delay=2;
            limit_req_log_level warn;

            # allow only one parrallel connection per ip
            limit_conn login_con 1;

            limit_except GET POST { deny  all; }   


            proxy_pass http://api;
        }

        location / {
            if ($modern_browser = 0) {
                return 403;
            }

            # allow 16 requests than throttle down to 10 r/s second than after 40 block
            limit_req zone=general burst=40 delay=15;

            limit_except GET POST { deny  all; }   

            proxy_pass http://api;
        }
        
	# Logging
        # access_log /var/log/nginx/access.log;
        # error_log /var/log/nginx/error.log;
    }
}
events {
    worker_connections  1024;  # parallel connections
}
